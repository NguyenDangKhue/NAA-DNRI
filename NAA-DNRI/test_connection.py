#!/usr/bin/env python3
"""
Script test k·∫øt n·ªëi m·∫°ng cho LabManage
"""

import socket
import requests
import time
import threading
from urllib.parse import urljoin

def test_port_open(host, port, timeout=3):
    """Test xem port c√≥ m·ªü kh√¥ng"""
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(timeout)
        result = sock.connect_ex((host, port))
        sock.close()
        return result == 0
    except:
        return False

def test_http_response(url, timeout=5):
    """Test HTTP response"""
    try:
        response = requests.get(url, timeout=timeout)
        return response.status_code == 200, response.status_code
    except requests.exceptions.ConnectionError:
        return False, "Connection Error"
    except requests.exceptions.Timeout:
        return False, "Timeout"
    except Exception as e:
        return False, str(e)

def main():
    print("=" * 50)
    print("    TEST K·∫æT N·ªêI LAB MANAGE")
    print("=" * 50)
    print()
    
    # Th√¥ng tin server
    local_ip = "192.168.1.201"
    port = 5000
    local_url = f"http://localhost:{port}"
    network_url = f"http://{local_ip}:{port}"
    
    print(f"üîç ƒêang test k·∫øt n·ªëi...")
    print(f"   ‚Ä¢ Local: {local_url}")
    print(f"   ‚Ä¢ Network: {network_url}")
    print()
    
    # Test port local
    print("1Ô∏è‚É£ Test port local (localhost:5000)...")
    if test_port_open("localhost", port):
        print("   ‚úÖ Port local m·ªü")
        
        # Test HTTP response
        success, status = test_http_response(local_url)
        if success:
            print(f"   ‚úÖ HTTP response OK (Status: {status})")
        else:
            print(f"   ‚ùå HTTP response l·ªói: {status}")
    else:
        print("   ‚ùå Port local kh√¥ng m·ªü")
    print()
    
    # Test port network
    print("2Ô∏è‚É£ Test port network (192.168.1.201:5000)...")
    if test_port_open(local_ip, port):
        print("   ‚úÖ Port network m·ªü")
        
        # Test HTTP response
        success, status = test_http_response(network_url)
        if success:
            print(f"   ‚úÖ HTTP response OK (Status: {status})")
        else:
            print(f"   ‚ùå HTTP response l·ªói: {status}")
    else:
        print("   ‚ùå Port network kh√¥ng m·ªü")
    print()
    
    print("=" * 50)
    print("K·∫æT QU·∫¢:")
    print("=" * 50)
    
    local_ok = test_port_open("localhost", port)
    network_ok = test_port_open(local_ip, port)
    
    if local_ok and network_ok:
        print("üéâ Server ho·∫°t ƒë·ªông t·ªët!")
        print(f"   ‚Ä¢ Truy c·∫≠p t·ª´ m√°y n√†y: {local_url}")
        print(f"   ‚Ä¢ Truy c·∫≠p t·ª´ thi·∫øt b·ªã kh√°c: {network_url}")
    elif local_ok:
        print("‚ö†Ô∏è  Server ch·ªâ ho·∫°t ƒë·ªông local")
        print("   ‚Ä¢ C·∫ßn ki·ªÉm tra Firewall")
        print("   ‚Ä¢ C·∫ßn ki·ªÉm tra c·∫•u h√¨nh network")
    else:
        print("‚ùå Server ch∆∞a kh·ªüi ƒë·ªông")
        print("   ‚Ä¢ Ch·∫°y: python -m app")
        print("   ‚Ä¢ Ho·∫∑c: start_server.bat")

if __name__ == "__main__":
    main()
